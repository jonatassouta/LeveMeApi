// <auto-generated />
using System;
using LeveMv.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeveMv.Data.Migrations
{
    [DbContext(typeof(LeveMvContext))]
    [Migration("20230525193309_Initial DB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("LeveMvID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("ID");

                    b.HasIndex("LeveMvID");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.LeMv", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("ClientesID");

                    b.ToTable("LeveMvs", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Produto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("ID");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.HasOne("LeveMv.Domain.Models.LeMv", "LeveMv")
                        .WithMany()
                        .HasForeignKey("LeveMvID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeveMv");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.LeMv", b =>
                {
                    b.HasOne("LeveMv.Domain.Models.Cliente", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
