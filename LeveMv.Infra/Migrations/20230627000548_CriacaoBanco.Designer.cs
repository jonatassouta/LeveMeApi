// <auto-generated />
using System;
using LeveMv.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeveMe.Data.Migrations
{
    [DbContext(typeof(LeveMeContext))]
    [Migration("20230627000548_CriacaoBanco")]
    partial class CriacaoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("CNPJ")
                        .HasColumnType("numeric(14,0)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("ID");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("6714d050-cbad-4951-b819-3641e4647f1c"),
                            Ativo = true,
                            Bairro = "Vila Xavier",
                            CNPJ = 11122233345678m,
                            Cidade = "Araraquara",
                            DataCadastro = new DateTime(2025, 5, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Endereço = "Av. Teste",
                            Nome = "Jonatas",
                            Telefone = "16999998888",
                            UF = "SP"
                        });
                });

            modelBuilder.Entity("LeveMv.Domain.Models.ClienteLeveMe", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeveMeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClienteId", "LeveMeId");

                    b.HasIndex("LeveMeId");

                    b.ToTable("ClientesleveMe", (string)null);

                    b.HasData(
                        new
                        {
                            ClienteId = new Guid("6714d050-cbad-4951-b819-3641e4647f1c"),
                            LeveMeId = new Guid("fa974954-c32d-4e62-9154-c77d14445525")
                        });
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Leveme", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("LeveMe", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("fa974954-c32d-4e62-9154-c77d14445525"),
                            Nome = "Leve Me Tipo 1"
                        });
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Produto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(38,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClienteId");

                    b.ToTable("Produtos", (string)null);

                    b.HasData(
                        new
                        {
                            ID = new Guid("afc849df-735d-48ec-8e20-61aa2e434cff"),
                            ClienteId = new Guid("6714d050-cbad-4951-b819-3641e4647f1c"),
                            Nome = "Cabo Tipo C",
                            Preco = 22.5m,
                            Quantidade = 0
                        });
                });

            modelBuilder.Entity("LeveMv.Domain.Models.ClienteLeveMe", b =>
                {
                    b.HasOne("LeveMv.Domain.Models.Cliente", "Cliente")
                        .WithMany("LeveMe")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeveMv.Domain.Models.Leveme", "LeveMe")
                        .WithMany("Clientes")
                        .HasForeignKey("LeveMeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("LeveMe");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Produto", b =>
                {
                    b.HasOne("LeveMv.Domain.Models.Cliente", "Cliente")
                        .WithMany("Produtos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.Navigation("LeveMe");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Leveme", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
