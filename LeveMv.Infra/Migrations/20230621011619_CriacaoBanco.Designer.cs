// <auto-generated />
using System;
using LeveMv.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeveMe.Data.Migrations
{
    [DbContext(typeof(LeveMeContext))]
    [Migration("20230621011619_CriacaoBanco")]
    partial class CriacaoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("LeveMvID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.HasKey("ID");

                    b.ToTable("Clientes", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.ClienteLeveMe", b =>
                {
                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LeveMeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClienteId", "LeveMeId");

                    b.HasIndex("LeveMeId");

                    b.ToTable("ClientesleveMe", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Leveme", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("LeveMe", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Produto", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric(38,2)");

                    b.HasKey("ID");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("LeveMv.Domain.Models.ClienteLeveMe", b =>
                {
                    b.HasOne("LeveMv.Domain.Models.Cliente", "Cliente")
                        .WithMany("LeveMe")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeveMv.Domain.Models.Leveme", "LeveMe")
                        .WithMany("Clientes")
                        .HasForeignKey("LeveMeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("LeveMe");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Cliente", b =>
                {
                    b.Navigation("LeveMe");
                });

            modelBuilder.Entity("LeveMv.Domain.Models.Leveme", b =>
                {
                    b.Navigation("Clientes");
                });
#pragma warning restore 612, 618
        }
    }
}
